"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const registry_service_1 = require("./services/registry-service");
const contract_factory_1 = require("./services/contract-factory");
const logger_1 = require("./utils/logger");
const last_block_1 = require("./utils/last-block");
const data_product_updater_1 = require("./elasticsearch/data-product-updater");
const path = require('path');
const Web3 = require('web3');
const config = require('../config/config');
const esClient = require('./elasticsearch/client');
const web3 = new Web3(new Web3.providers.HttpProvider(config.ethereumHost));
const logger = logger_1.Logger.init('ETH-LISTENER');
const lastBlockFilepath = path.join(__dirname, '../', 'data', 'lastReadBlock.dat');
const lastBlock = new last_block_1.LastBlock(config.startBlock, lastBlockFilepath);
const startBlockNumber = lastBlock.read();
const toBlockNumber = 'latest';
const watcherConfig = { fromBlock: startBlockNumber, toBlock: toBlockNumber };
logger.info('_____ RESTART ______');
logger.info('[1] Registry address set to: ' + config.registryAddress);
logger.info('[2] Connecting to: ' + config.ethereumHost);
logger.info('[3] Current block:' + web3.eth.blockNumber + '. Start block:' + startBlockNumber + ' to block:' + toBlockNumber);
const registryContractFactory = new contract_factory_1.ContractFactory(require('../contracts/Registry.json'), web3.currentProvider);
const dataProductContractFactory = new contract_factory_1.ContractFactory(require('../contracts/DataProduct.json'), web3.currentProvider);
const registryService = new registry_service_1.RegistryService(registryContractFactory, dataProductContractFactory, logger);
const dataProductUpdater = new data_product_updater_1.DataProductUpdater(esClient, config.elasticsearch.index, config.ipfs, logger);
registryService.watchDataProductChange(config.registryAddress, watcherConfig, (event) => {
    dataProductUpdater.updateDataProduct(event.contract);
});
lastBlock.watch(web3, config.lastBlockSaveInterval);
